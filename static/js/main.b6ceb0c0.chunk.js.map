{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","random.js","components/OptionCard.jsx","components/Cards.jsx","components/GreenButton.jsx","components/Result.jsx","components/App.jsx","index.js"],"names":["Header","className","Footer","class","href","random","op1ph1","op1ph2","op1ph3","op2ph1","op2ph2","op2ph3","OptionCard","props","opid","ph1","ph2","ph3","useState","pro","setPro","proList","setProList","con","setCon","conList","setConList","handleChange","event","target","name","value","handleClick","rating","prompt","isNaN","alert","previousItems","loadDecision","blur","clickBox","document","getElementsByClassName","type","placeholder","onClick","onChange","map","eachPro","eachCon","Cards","myOptions","randomNumber","Math","floor","length","i","numberOfCards","eachOption","index","GreenButton","myRoute","to","validator","decision","Result","correctChoice","App","setChoice","pros1","setPros1","cons1","setCons1","pros2","setPros2","cons2","setCons2","factor","option1","option2","net1","reduce","accumulator","currentValue","Number","net2","optionBox1","optionBox2","path","exact","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b6ceb0c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() \r\n{\r\n    return <div className=\"jumbotron jumbotron-fluid header\">\r\n    <div className=\"container\">\r\n      <h1>Cost-Benefit Analysis (CBA)</h1>\r\n      <p>Need to make a decision? Unable to make a commitment to one of two options or, just unable to think logically at all? No problem! Enter the details below and hit the big button below!</p>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() \r\n{\r\n    return <div class=\"container-fluid footer\">\r\n    <a href=\"https://www.linkedin.com/in/blaise-vellozzo-20792355/\">LinkedIn</a>\r\n    <a href=\"https://blaizeus.github.io/Personal-Site/\">Personal Site</a>\r\n    <p>Â© 2020 Blaise Vellozzo</p>\r\n  </div>\r\n}\r\n\r\nexport default Footer;","var random = [\r\n    {\r\n        op1ph1: \"I should eat a Pizza...\",\r\n        op1ph2: \"It tastes great!\",\r\n        op1ph3: \"Doesn't do my waistline any favours\",\r\n        op2ph1: \"I should go for a run...\",\r\n        op2ph2: \"Does favours for my waistline\",\r\n        op2ph3: \"Effort\"    \r\n    },\r\n\r\n    {\r\n        op1ph1: \"I should watch TV...\",\r\n        op1ph2: \"My favourite show is on!\",\r\n        op1ph3: \"Not best use of time\",\r\n        op2ph1: \"I should do my homework...\",\r\n        op2ph2: \"Might learn something\",\r\n        op2ph3: \"Effort\"   \r\n    }\r\n]\r\n\r\nexport default random;","import { logDOM } from \"@testing-library/react\";\r\nimport React, {useState} from \"react\";\r\nimport random from \"../random\";\r\n\r\n\r\n\r\nfunction OptionCard(props) \r\n{\r\n\r\n    if(props.opid == \"1\") \r\n    {\r\n        var ph1 = random[0].op1ph1;\r\n        var ph2 = random[0].op1ph2;\r\n        var ph3 = random[0].op1ph3;\r\n    }\r\n    else \r\n    {\r\n        var ph1 = random[0].op2ph1;\r\n        var ph2 = random[0].op2ph2;\r\n        var ph3 = random[0].op2ph3;\r\n    }\r\n\r\n\r\n\r\n\r\n    const [pro, setPro] = useState(\"\");\r\n    const [proList, setProList] = useState([]);\r\n\r\n    const [con, setCon] = useState(\"\");\r\n    const [conList, setConList] = useState([]);\r\n\r\n\r\n\r\n\r\n    function handleChange(event) \r\n    {   \r\n        (event.target.name === \"new pro text\")?\r\n        setPro(event.target.value) :  setCon(event.target.value)  \r\n    }\r\n\r\n    function handleClick(event)\r\n    {   \r\n        do \r\n        {\r\n            var rating = prompt(\"How important is this out of 10?\");  \r\n            if(isNaN(rating) === true || rating=== \"\" || rating>10 || rating === null)  {alert(\"Must enter number between 1 and 10!\")}\r\n        }\r\n        while(isNaN(rating) === true || rating=== \"\" || rating>10 || rating === null)\r\n\r\n\r\n        (event.target.name === \"new pro button\")?\r\n\r\n        setProList(previousItems => {\r\n            const factor = \"pro\";\r\n            setPro(\"\")\r\n            props.loadDecision(props.opid, factor, rating);\r\n               return [\r\n                    ...previousItems,\r\n                    [pro,rating]\r\n                ]\r\n            }\r\n        ) :\r\n        setConList(previousItems => {\r\n            const factor = \"con\";\r\n            setCon(\"\")\r\n            props.loadDecision(props.opid, factor, rating);\r\n            return [\r\n                 ...previousItems,\r\n                 [con,rating]\r\n             ]\r\n         }\r\n     )\r\n\r\n     event.target.blur()\r\n\r\n    }\r\n\r\n\r\n\r\n    function clickBox(event) \r\n    {   if(props.opid == \"1\") \r\n        {\r\n            var currentOption = document.getElementsByClassName(\"option-input-box\")\r\n            if(currentOption[0].value === \"\") \r\n            {\r\n                alert(\"Please enter an Option for Option 1!\")\r\n                event.target.blur()\r\n            }\r\n        }\r\n        else \r\n        {\r\n            var currentOption = document.getElementsByClassName(\"option-input-box\")\r\n            if(currentOption[1].value === \"\") \r\n            {\r\n                alert(\"Please enter an Option for Option 2!\")\r\n                event.target.blur()\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return <div className=\"col-md-6\">\r\n        <h1><strong>Option {props.opid}</strong></h1>\r\n        <div className=\"input-group mb-3\">\r\n            <input \r\n            className=\"form-control option-input-box\" \r\n            type=\"text\" \r\n            placeholder={ph1}\r\n            ></input>\r\n        </div>\r\n            \r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-6\">\r\n                <h1>Pros</h1>\r\n\r\n                <div className=\"input-group mb-3\">\r\n\r\n                    <input \r\n                    className=\"form-control\"\r\n                    onClick={clickBox}\r\n                    onChange={handleChange} \r\n                    type=\"text\" \r\n                    placeholder={ph2}\r\n                    value={pro}\r\n                    name=\"new pro text\"\r\n                    ></input>\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <button \r\n                        className=\"btn btn-outline-secondary\" \r\n                        onClick={handleClick} \r\n                        name=\"new pro button\" \r\n                        >+</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n                \r\n\r\n                <ul>\r\n                    {proList.map(eachPro => {\r\n                        return <li>\r\n                        \r\n                        <div className=\"list-text\" >{eachPro[0]}</div>\r\n                        <div className=\"rating\">{eachPro[1]}</div>\r\n                        \r\n                        </li>\r\n                    })}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                <h1>Cons</h1>\r\n\r\n                <div className=\"input-group mb-3\">\r\n\r\n                    <input \r\n                    className=\"form-control\"\r\n                    onClick={clickBox}\r\n                    onChange={handleChange} \r\n                    type=\"text\" \r\n                    placeholder={ph3}\r\n                    value={con}\r\n                    ></input>\r\n\r\n                    <div className=\"input-group-append\">\r\n                        <button className=\"btn btn-outline-secondary\" onClick={handleClick}>+</button>\r\n                    </div>\r\n                    \r\n                </div>         \r\n\r\n\r\n                <ul>\r\n                    {conList.map(eachCon => {\r\n                        return <li>\r\n                        <div className=\"list-text\" >{eachCon[0]}</div>\r\n                        <div className=\"rating\">{eachCon[1]}</div>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n</div>\r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default OptionCard;","import React from \"react\";\r\nimport OptionCard from \"./OptionCard\";\r\nimport random from \"../random\";\r\nimport { logDOM } from \"@testing-library/react\";\r\n\r\nfunction Cards(props) \r\n{\r\n\r\n    var myOptions = []; \r\n    var randomNumber = Math.floor(Math.random()*random.length)\r\n\r\n    for (let i = 0; i < props.numberOfCards; i++) \r\n    {\r\n        myOptions[i] = i+1;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n\r\n            {myOptions.map((eachOption, index) => {\r\n                return <OptionCard randomNumber={randomNumber} opid={eachOption} loadDecision={props.loadDecision}/>\r\n            })}\r\n\r\n        </div>\r\n    </div>\r\n\r\n)}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction GreenButton(props) \r\n{   \r\n    \r\n    var myRoute = \"./results\"\r\n\r\n\r\n\r\n    function resultsPage() \r\n    {  \r\n        return myRoute;\r\n    }\r\n\r\n\r\n\r\n    function handleBigGreen(event) \r\n    {   \r\n        var shouldLoad = props.validator()\r\n\r\n        if(shouldLoad === \"no\") \r\n        {   \r\n            myRoute = \"/\"\r\n            alert(\"I cannot read your mind. Please enter two options for me to decide between!\")\r\n            event.target.blur()\r\n        }\r\n        else \r\n        {\r\n            props.decision()\r\n        }\r\n    }\r\n\r\n    return <div className=\"big-green\">\r\n        <Link to={resultsPage}>\r\n        <button \r\n        onClick={handleBigGreen}\r\n        type=\"button\" \r\n        className=\"btn btn-outline-light btn-lg\"\r\n        >Decide!</button>\r\n        </Link>\r\n        \r\n    </div>\r\n}\r\n\r\nexport default GreenButton;","import React from \"react\";\r\n\r\n\r\nfunction Result(props) \r\n{   \r\n    \r\n    return <div className=\"jumbotron result\">\r\n        <p className=\"lead\">The correct choice is:</p>\r\n        <h1 className=\"display-4\">{props.correctChoice}</h1>\r\n        <p className=\"lead\">Enjoy your day, knowing that you've made the right decision!</p>\r\n        <hr className=\"my-4\"/>\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-light btn-lg\">\r\n            <a className=\"return\" href=\"/CBA\">Return Home</a>\r\n        </button>\r\n        \r\n        \r\n\r\n    </div>\r\n\r\n\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nexport default Result;","import React, {useState} from \"react\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Cards from \"./Cards\";\r\nimport GreenButton from \"./GreenButton\"\r\nimport Result from \"./Result\";\r\nimport {HashRouter as Router, Switch, Route,} from 'react-router-dom';\r\n\r\n\r\nfunction App() \r\n{   \r\n\r\n    const [correctChoice, setChoice] = useState(\"\");\r\n    var shouldLoad = \"\";\r\n\r\n    const [pros1, setPros1] = useState([0]);\r\n    const [cons1, setCons1] = useState([0]);\r\n\r\n    const [pros2, setPros2] = useState([0]);\r\n    const [cons2, setCons2] = useState([0]);\r\n\r\n    function loadDecision(opid, factor, rating) {\r\n\r\n        if(opid === 1) \r\n        {   \r\n            \r\n            if(factor === \"pro\") \r\n            {\r\n                setPros1(previousItems => {\r\n                    return [\r\n                        ...previousItems,\r\n                        [rating]\r\n                    ]\r\n                })\r\n            }\r\n            else\r\n            {\r\n                setCons1(previousItems => {\r\n                    return [\r\n                        ...previousItems,\r\n                        [rating]\r\n                    ]\r\n                })   \r\n            }\r\n            \r\n        }\r\n        else \r\n        {\r\n            if(factor === \"pro\") \r\n            {\r\n                setPros2(previousItems => {\r\n                    return [\r\n                        ...previousItems,\r\n                        [rating]\r\n                    ]\r\n                })\r\n            }\r\n            else\r\n            {\r\n                setCons2(previousItems => {\r\n                    return [\r\n                        ...previousItems,\r\n                        [rating]\r\n                    ]\r\n                })   \r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    function decision() {\r\n\r\n        var option1 = document.getElementsByClassName(\"option-input-box\")[0].value\r\n        var option2 = document.getElementsByClassName(\"option-input-box\")[1].value\r\n\r\n       var prosTotal1 = pros1.reduce((accumulator, currentValue) => {\r\n            return Number(accumulator)+Number(currentValue)\r\n            },)\r\n        var consTotal1 = cons1.reduce((accumulator, currentValue) => {\r\n            return Number(accumulator)+Number(currentValue)\r\n            },)\r\n        var prosTotal2 = pros2.reduce((accumulator, currentValue) => {\r\n            return Number(accumulator)+Number(currentValue)\r\n            },)\r\n        var consTotal2 = cons2.reduce((accumulator, currentValue) => {\r\n            return Number(accumulator)+Number(currentValue)\r\n            },)\r\n\r\n        const net1 = prosTotal1 - consTotal1\r\n        const net2 = prosTotal2 - consTotal2\r\n        \r\n\r\n        if(net1 > net2) \r\n        {\r\n            setChoice(option1 + \" â\")\r\n        }\r\n        else if (net2 > net1)\r\n        {\r\n            setChoice(option2 + \" â\")\r\n        }\r\n        else    \r\n        {\r\n            setChoice(\"Your options are equally viable. Flip a coin! ð\")\r\n        }\r\n        \r\n\r\n            \r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    function validator() {\r\n\r\n        var optionBox1 = document.getElementsByClassName(\"option-input-box\")[0].value\r\n        var optionBox2 = document.getElementsByClassName(\"option-input-box\")[1].value\r\n\r\n        \r\n        if(optionBox1 === \"\" || optionBox2 === \"\") \r\n        {\r\n            shouldLoad = \"no\";\r\n        }\r\n        else \r\n        {\r\n            shouldLoad = \"yessir\"\r\n        }\r\n\r\n        \r\n        return shouldLoad;\r\n            \r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Router>\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/\" exact render={() => {\r\n                    return <div>\r\n                        <Header />\r\n                        <Cards numberOfCards={2} loadDecision={loadDecision} />\r\n                        <GreenButton \r\n                        loadDecision={loadDecision} \r\n                        decision={decision} \r\n                        validator={validator}\r\n                        />\r\n                        <Footer />\r\n                    </div>\r\n                }} />\r\n\r\n                <Route path=\"/results\" render={() => {\r\n                    return <div>\r\n                        <Result correctChoice={correctChoice}/>\r\n                    </div>\r\n                }} />\r\n            </Switch>\r\n            \r\n        </div>\r\n        </Router>\r\n    );\r\n \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}